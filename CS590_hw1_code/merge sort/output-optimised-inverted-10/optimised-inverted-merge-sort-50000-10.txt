Timer (generate): 4ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 6ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 3ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 5ms real	10ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 4ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 6ms real	0ms user	10ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 4ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 6ms real	10ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 4ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 7ms real	10ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 4ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 6ms real	10ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 3ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 6ms real	10ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 4ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 5ms real	10ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 4ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 6ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 4ms real	0ms user	0ms sys
[ 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 5000 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 5000 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 5000 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 5000 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 5000 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 5000 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 5000 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 5000 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 5000 ]
[ 4999 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4999 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4999 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4999 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4999 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4999 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4999 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4999 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4999 4999 ]
[ 4998 4998 4998 4998 4998 4998 4998 4998 4998 4999 ]

Running merge sort algorithm: 
Timer (sort): 7ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

